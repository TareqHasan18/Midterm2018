Please answer the below core-java Questions:

What is programing language?
Ans: A programming language is a computer language engineered to create a standard form of commands. These commands
     can be interpreted into a code understood by a machine.

What jdk contains or composed of and define each components?

What is IDE?
Ans: An Itegrated Development Environment(IDE) is a software development tool that is mainly used to write and test the programs or software.

What are the IDEs available in the market to support java?
Ans: Intellij, Eclipse, NetBeans, Codenvy, JDeveloper, BlueJ, DrJava, Geany, SlickEdit

Explain the entire java life cycle.
Ans:Editor(Intellij) ---> Source Code ---> Java Compiler (Javac)
    ---->    Bytecodes(Classname.class) ----> JVM ----> Operating System

what is class?
Ans:  A class is a user defined blueprint or prototype from which objects are created.

What is object?
Ans:    Object is an instance of a class and represents the real life entities.

What is the entry point of an application?
Ans:    Entry point is where an application starts to execute and Main method is that entry point.

Why main is static?
Ans:   Main is static so that it could be called without creating objects

Which class is the superclass of all classes?
Ans:    java.lang.object is a superclass of all class.

What is difference between path and classpath variables?
Ans:  PATH is the environment variable where we specify the locations of binaries.
        It is used to locate JDK binaries like "java" or "javac" command used to run java program and compile java source file.
      CLASSPATH is the path for Java application where the classes we compiled will be available.
        CLASSPATH, an environment variable is used by System or Application ClassLoader to locate and load compile Java bytecodes stored in the .class file.

What is the difference between an Interface and Abstract class?
Ans:    1) Abstract class can have abstract and non-abstract methods.
        Interface can have only abstract methods.
        2) Abstract class doesn't support multiple inheritance.
        Interface supports multiple inheritance.
        3) Abstract class can have final, non-final, static and non-static variables.
        Interface has only static and final variables.
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
Ans:    NO; By providing anonymous inner class to Abstract class or interface we can say they have intantiated indirectly.

what is Access Specifier?
Ans:    Access specifier is used to control the visibility of members like classes, variables and methods.

What is OOP ? Define each feature of java OOP.
Ans:    Object-oriented programming (OOP) is a programming language model organized around objects rather than "actions" and data rather than logic.
        Encapsulation: it means hiding data and methods within an Object. it provides the security that keeps data and methods safe from inadvertent changes.
        Inheritance: it is mainly code reusability.That means ability to create classes that share the attributes and methods of existing classes, but with more specific features.
        Polymorphism: it is the ability of an object to take on many form.
        Abstraction: in one word Abstraction is Implementation hiding

What is Java Package and which package is imported by default?
Ans:    Java Package: A Java package is a mechanism for organizing Java classes and interfaces into namespaces similar to the modules of Modula.
        java.lang package is imported by default.

What is API? Name list of API that you have used so far.
Ans:    API:API is a specification of possible interactions with a software component. That means it is a software intermediary that allows two applications to talk to each other.
        java.lang, java.util, java.io, buffereader, filereader,

Does java support multiple inheritance, explain why or why not?

What is method overloading and when it happens?
Explain exceptions in java and how to handle it.
What is static keyword in java? How it has been used in variables and methods ?
What is final and how it has been used variables and methods?
What is final, finally and finalize?
What is a constructor ?
Can we have multiple constructors in a class?
If we don't have a constructor declared, what is called during the object creation?
What is "this" keyword in java ?
What is "super" keyword in java? How many possible way can you use?
What is JVM stand for ?
Is JVM platform independent?
What version of java are you using?
What is JAR stand for ?
What is the difference between JDK and JVM?
What is the difference between JVM and JRE?
What is compile time and run time?
What is heap?
How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









